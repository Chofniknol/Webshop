import{M as g,N as d,Y as s,a as p,b as u,c as h,d as i,e as l,g as c,ia as m}from"./chunk-OT7LPB2V.js";var n=m.BASIC_URL,f="authorization",k=(()=>{let o=class o{constructor(e,r){this.http=e,this.userStorageService=r}login(e,r){return this.http.post(n+"authenticate",{username:e,password:r},{observe:"response"}).pipe(i(t=>this.log("User Authentication")),u(t=>{console.log("res is ervice",t),this.userStorageService.saveUser(t.body),console.log(t);let U=t.headers.get(f).length,v=t.headers.get(f).substring(7,U);return this.userStorageService.saveToken(v),t}))}register(e){return console.log(e),this.http.post(n+"sign-up",e)}getUserById(){let e=s.getUserId();return this.http.get(n+`user/${e}`,{headers:this.createAuthorizationHeader()}).pipe(i(r=>this.log("User Fetched successfully")),h(this.handleError("Error Fetching User",[])))}updateUser(e){return this.http.post(n+"update",e,{headers:this.createAuthorizationHeader()}).pipe(i(r=>this.log("User Updated successfully")),h(this.handleError("Error Updating User",[])))}createAuthorizationHeader(){return new g().set("Authorization","Bearer "+s.getToken())}log(e){console.log(`User Auth Service: ${e}`)}handleError(e="operation",r){return t=>(console.error(t),this.log(`${e} failed: ${t.message}`),p(r))}};o.\u0275fac=function(r){return new(r||o)(c(d),c(s))},o.\u0275prov=l({token:o,factory:o.\u0275fac,providedIn:"root"});let a=o;return a})();export{k as a};
